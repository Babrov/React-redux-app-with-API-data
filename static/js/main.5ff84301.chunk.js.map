{"version":3,"sources":["components/Navigation.js","components/PostsPage.js","components/PostsForm.js","actions/PostsActions.js","containers/PostsPageContainer.js","actions/UsersActions.js","components/Tabs.js","containers/UserDetailsPage.js","components/UsersPage.js","containers/UsersPageContainer.js","actions/ToDoActions.js","components/ToDoPage.js","containers/ToDoPageContainer.js","containers/App.js","reducers/PostsReducer.js","reducers/UsersReducer.js","reducers/ToDoReducer.js","reducers/MainReducer.js","store.js","index.js"],"names":["Navigation","className","to","PostsPage","postList","map","post","i","title","body","PostAdd","reduxForm","form","props","onSubmit","handleSubmit","Field","id","placeholder","name","component","type","FETCH_POSTS","ADD_POST","postsApi","PostsPageContainer","OnSubmit","values","addPost","document","getElementById","text","value","this","fetchPosts","nextProps","newPost","unshift","React","Component","connect","state","posts","postObj","dispatch","fetch","method","JSON","stringify","headers","then","res","json","payload","FETCH_USER","FETCH_USER_POSTS","FETCH_USER_TODOS","FETCH_USER_ALBUMS","Tabs","children","useState","label","active","setActive","tab","href","onClick","e","newActiveTab","preventDefault","handleClick","contentItem","userDetails","users","userPosts","userAlbums","userTodos","fetchUserPosts","userId","fetchUserAlbums","fetchUserTodos","match","params","userObj","find","user","Number","username","phone","email","address","company","useEffect","icon","faEnvelope","faPhone","faMapMarkerAlt","suite","street","city","zipcode","faInstagram","faNetworkWired","bs","charAt","toUpperCase","slice","album","src","todo","completed","htmlFor","checked","readOnly","UsersPage","usersList","alt","fetchUser","FETCH_TODO","ToDoPage","todoList","fetchTodos","App","exact","from","path","UserDetailsPage","initialState","PostsReducer","action","UsersReducer","ToDoReducer","MainReducer","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5ff84301.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Navigation.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <ul className=\"navbar\">\r\n            <li className=\"navbarLink\">\r\n                <NavLink to=\"/posts\">Posts</NavLink>\r\n            </li>\r\n            <li className=\"navbarLink\">\r\n                <NavLink to=\"/todo\">To Do</NavLink>\r\n            </li>\r\n            <li className=\"navbarLink\">\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import \"../styles/PostsPage.scss\";\r\n\r\nconst PostsPage = ({ postList }) => {\r\n    return (\r\n        <div className=\"postsPage\">\r\n            <h1>Posts for this week</h1>\r\n            {postList.map((post, i) => (\r\n                <div className=\"posts\" key={post.title + i}>\r\n                    <h3 className=\"postTitle\">{post.title}</h3>\r\n                    <p className=\"text\">{post.body}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\nexport default PostsPage;\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport \"../styles/PostsForm.scss\";\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form className=\"PostsForm\" onSubmit={props.handleSubmit}>\r\n            <h2>Add Post</h2>\r\n\r\n            <div>\r\n                <Field\r\n                    id=\"title\"\r\n                    placeholder={\"Title\"}\r\n                    name={\"title\"}\r\n                    component={\"input\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    id=\"text\"\r\n                    placeholder={\"Write Something...\"}\r\n                    name={\"body\"}\r\n                    component={\"textarea\"}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Add Post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst PostAdd = reduxForm({ form: \"addPost\" })(PostForm);\r\n\r\nexport default PostAdd;\r\n","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nconst postsApi = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\nexport const fetchPosts = () => (dispatch) => {\r\n    fetch(postsApi)\r\n        .then((res) => res.json())\r\n        .then((posts) =>\r\n            dispatch({\r\n                type: FETCH_POSTS,\r\n                payload: { posts },\r\n            })\r\n        );\r\n};\r\n\r\nexport const addPost = (postObj) => (dispatch) => {\r\n    fetch(postsApi, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(postObj),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then((res) => res.json())\r\n        .then((newPost) =>\r\n            dispatch({\r\n                type: ADD_POST,\r\n                payload: { newPost },\r\n            })\r\n        );\r\n};\r\n","import React from \"react\";\r\nimport \"../styles/PostsPageContainer.scss\";\r\nimport PostsPage from \"../components/PostsPage\";\r\nimport PostsAdd from \"../components/PostsForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../actions/PostsActions\";\r\nimport { fetchPosts } from \"../actions/PostsActions\";\r\n\r\nclass PostsPageContainer extends React.Component {\r\n    OnSubmit = (values) => {\r\n        this.props.addPost(values);\r\n        const title = document.getElementById(\"title\"),\r\n            text = document.getElementById(\"text\");\r\n        title.value = \"\";\r\n        text.value = \"\";\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.newPost) {\r\n            this.props.postList.unshift(nextProps.newPost);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"PostsPageContainer\">\r\n                <PostsAdd onSubmit={this.OnSubmit} />\r\n                <PostsPage postList={this.props.postList} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    newPost: state.posts.newPost,\r\n    postList: state.posts.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPost, fetchPosts })(\r\n    PostsPageContainer\r\n);\r\n","export const FETCH_USER = \"FETCH_USER\";\r\nexport const FETCH_USER_POSTS = \"FETCH_USER_POSTS\";\r\nexport const FETCH_USER_TODOS = \"FETCH_USER_TODOS\";\r\nexport const FETCH_USER_ALBUMS = \"FETCH_USER_ALBUMS\";\r\n\r\nconst userApi = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\nexport const fetchUser = () => (dispatch) => {\r\n    fetch(userApi)\r\n        .then((res) => res.json())\r\n        .then((users) =>\r\n            dispatch({\r\n                type: FETCH_USER,\r\n                payload: { users },\r\n            })\r\n        );\r\n};\r\n\r\nexport const fetchUserPosts = (userId) => (dispatch) => {\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${userId}/posts`)\r\n        .then((res) => res.json())\r\n        .then((userPosts) => {\r\n            dispatch({\r\n                type: FETCH_USER_POSTS,\r\n                payload: { userPosts },\r\n            });\r\n        });\r\n};\r\n\r\nexport const fetchUserAlbums = (userId) => (dispatch) => {\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${userId}/albums`)\r\n        .then((res) => res.json())\r\n        .then((userAlbums) => {\r\n            dispatch({\r\n                type: FETCH_USER_ALBUMS,\r\n                payload: { userAlbums },\r\n            });\r\n        });\r\n};\r\n\r\nexport const fetchUserTodos = (userId) => (dispatch) => {\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${userId}/todos`)\r\n        .then((res) => res.json())\r\n        .then((userTodos) => {\r\n            dispatch({\r\n                type: FETCH_USER_TODOS,\r\n                payload: { userTodos },\r\n            });\r\n        });\r\n};\r\n","import { useState } from \"react\";\r\nimport \"../styles/Tabs.scss\";\r\n\r\nconst Tabs = ({ children }) => {\r\n    const [active, setActive] = useState(children[0].props.label);\r\n    const handleClick = (e, newActiveTab) => {\r\n        e.preventDefault();\r\n        setActive(newActiveTab);\r\n    };\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <ul className=\"tabs\">\r\n                {children.map((tab) => {\r\n                    const label = tab.props.label;\r\n                    return (\r\n                        <li\r\n                            className={label == active ? \"current\" : \"\"}\r\n                            key={label}\r\n                        >\r\n                            <a href=\"#\" onClick={(e) => handleClick(e, label)}>\r\n                                {label}\r\n                            </a>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            {children.map((contentItem, i) => {\r\n                if (contentItem.props.label == active) {\r\n                    return (\r\n                        <div className=\"content\" key={i}>\r\n                            {contentItem.props.children}\r\n                        </div>\r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tabs;\r\n","import \"../styles/UserDetailsPage.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faEnvelope,\r\n    faPhone,\r\n    faMapMarkerAlt,\r\n    faNetworkWired,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faInstagram } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n    fetchUserPosts,\r\n    fetchUserAlbums,\r\n    fetchUserTodos,\r\n} from \"../actions/UsersActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Tabs from \"../components/Tabs\";\r\n\r\nconst UserDetailsPage = (props) => {\r\n    const albumIcon =\r\n        \"https://www.flaticon.com/svg/static/icons/svg/43/43922.svg\";\r\n    const id = props.match.params.id;\r\n    const userObj = props.userDetails.find((user) => {\r\n        return user.id === Number(id);\r\n    });\r\n    let { name, username, phone, email, address, company } = userObj;\r\n    useEffect(() => {\r\n        props.fetchUserPosts(id);\r\n        props.fetchUserAlbums(id);\r\n        props.fetchUserTodos(id);\r\n    }, []);\r\n    return (\r\n        <Tabs>\r\n            <div label=\"Details\">\r\n                <h1>{name}</h1>\r\n                <ul>\r\n                    <li className=\"userInfo\">\r\n                        <FontAwesomeIcon icon={faEnvelope} className=\"icon\" />\r\n                        <span>{email}</span>\r\n                        <span className=\"infoDescr\">Email</span>\r\n                    </li>\r\n                    <li className=\"userInfo\">\r\n                        <FontAwesomeIcon icon={faPhone} className=\"icon\" />\r\n                        <span>{phone}</span>\r\n                        <span className=\"infoDescr\">Mobile</span>\r\n                    </li>\r\n                    <li className=\"userInfo\">\r\n                        <FontAwesomeIcon\r\n                            icon={faMapMarkerAlt}\r\n                            className=\"icon\"\r\n                        />\r\n                        <span>{`${address.suite} ${address.street} ${address.city}, ${address.zipcode}`}</span>\r\n                        <span className=\"infoDescr\">Work</span>\r\n                    </li>\r\n                    <li className=\"userInfo\">\r\n                        <FontAwesomeIcon icon={faInstagram} className=\"icon\" />\r\n                        <span>{`@${username}`}</span>\r\n                        <span className=\"infoDescr\">Social Channels</span>\r\n                    </li>\r\n                    <li className=\"userInfo\">\r\n                        <FontAwesomeIcon\r\n                            icon={faNetworkWired}\r\n                            className=\"icon\"\r\n                        />\r\n                        <span>\r\n                            {`${\r\n                                company.bs.charAt(0).toUpperCase() +\r\n                                company.bs.slice(1)\r\n                            }`}\r\n                        </span>\r\n                        <span className=\"infoDescr\">Segments</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div label=\"Posts\">\r\n                {props.userPosts.map((post) => {\r\n                    return (\r\n                        <div className=\"posts\" key={post.id}>\r\n                            <h3 className=\"title\">{post.title}</h3>\r\n                            <p className=\"text\">{post.body}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <div label=\"Albums\">\r\n                {props.userAlbums.map((album) => {\r\n                    return (\r\n                        <div className=\"album\" key={album.id}>\r\n                            <img src={albumIcon} className=\"albumIcon\" />\r\n                            <h3 className=\"albumTitle\">{album.title}</h3>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <div label=\"Todos\">\r\n                {props.userTodos.map((todo) =>\r\n                    todo.completed ? (\r\n                        <label\r\n                            className=\"todo done\"\r\n                            htmlFor=\"checkbox\"\r\n                            key={todo.id}\r\n                        >\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"checkbox\"\r\n                                checked\r\n                                readOnly\r\n                            />\r\n                            <label className=\"fakeCheckbox\">{todo.title}</label>\r\n                        </label>\r\n                    ) : (\r\n                        <label\r\n                            className=\"todo\"\r\n                            htmlFor=\"checkbox\"\r\n                            key={todo.id}\r\n                        >\r\n                            <input type=\"checkbox\" name=\"checkbox\" readOnly />\r\n                            <label className=\"fakeCheckbox\">{todo.title}</label>\r\n                        </label>\r\n                    )\r\n                )}\r\n            </div>\r\n        </Tabs>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userDetails: state.users.users,\r\n    userPosts: state.users.userPosts,\r\n    userAlbums: state.users.userAlbums,\r\n    userTodos: state.users.userTodos,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchUserPosts,\r\n    fetchUserAlbums,\r\n    fetchUserTodos,\r\n})(UserDetailsPage);\r\n","import \"../styles/UsersPage.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst UsersPage = ({ usersList }) => {\r\n    let imgUrl =\r\n        \"https://cdn0.iconfinder.com/data/icons/set-ui-app-android/32/8-512.png\";\r\n    return (\r\n        <div>\r\n            <ul className=\"usersList\">\r\n                <h1>Users Online</h1>\r\n                {usersList.users.map((user) => (\r\n                    <li className=\"user\" key={user.id}>\r\n                        <img\r\n                            alt=\"userAvatar\"\r\n                            src={imgUrl}\r\n                            className=\"userPhoto\"\r\n                        />\r\n                        <span className=\"userName\">\r\n                            <NavLink to={`/users/${user.id}`}>\r\n                                {user.name}\r\n                            </NavLink>\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersPage;\r\n","import UsersPage from \"../components/UsersPage\";\r\nimport { fetchUser } from \"../actions/UsersActions\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UsersPageContainer = (props) => {\r\n    useEffect(() => {\r\n        props.fetchUser();\r\n    }, []);\r\n    return <UsersPage usersList={props.usersList} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    usersList: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(UsersPageContainer);\r\n","export const FETCH_TODO = \"FETCH_TODO\";\r\nconst todoApi = \"https://jsonplaceholder.typicode.com/todos\";\r\n\r\nexport const fetchTodos = () => (dispatch) => {\r\n    fetch(todoApi)\r\n        .then((res) => res.json())\r\n        .then((todo) =>\r\n            dispatch({\r\n                type: FETCH_TODO,\r\n                payload: { todo },\r\n            })\r\n        );\r\n};\r\n","import \"../styles/ToDoPage.scss\";\r\n\r\nconst ToDoPage = ({ todoList }) => {\r\n    return (\r\n        <div className=\"toDoList\">\r\n            <h1>To do</h1>\r\n            {todoList.todo.map((todo) =>\r\n                todo.completed ? (\r\n                    <label className=\"done\" htmlFor=\"checkbox\" key={todo.id}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"checkbox\"\r\n                            checked\r\n                            readOnly\r\n                        />\r\n                        {todo.title}\r\n                    </label>\r\n                ) : (\r\n                    <label htmlFor=\"checkbox\" key={todo.id}>\r\n                        <input type=\"checkbox\" name=\"checkbox\" readOnly />\r\n                        {todo.title}\r\n                    </label>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoPage;\r\n","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTodos } from \"../actions/ToDoActions\";\r\nimport ToDoPage from \"../components/ToDoPage\";\r\n\r\nconst ToDoPageContainer = (props) => {\r\n    useEffect(() => {\r\n        props.fetchTodos();\r\n    }, []);\r\n    return <ToDoPage todoList={props.todoList} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todoList: state.todo,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchTodos })(ToDoPageContainer);\r\n","import React from \"react\";\r\nimport \"../styles/App.scss\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport PostsPageContainer from \"../containers/PostsPageContainer\";\r\nimport UserDetailsPage from \"../containers/UserDetailsPage\";\r\nimport UsersPageContainer from \"./UsersPageContainer\";\r\nimport ToDoPageContainer from \"./ToDoPageContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App\">\r\n                <Navigation />\r\n                <Switch>\r\n                    <Redirect exact from=\"/\" to=\"/posts\" />\r\n                    <Route exact path=\"/posts\">\r\n                        <PostsPageContainer />\r\n                    </Route>\r\n                    <Route path=\"/users\" exact>\r\n                        <UsersPageContainer />\r\n                    </Route>\r\n                    <Route path=\"/users/:id\" component={UserDetailsPage} />\r\n                    <Route path=\"/todo\">\r\n                        <ToDoPageContainer />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ADD_POST, FETCH_POSTS } from \"../actions/PostsActions\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    newPost: {},\r\n};\r\nconst PostsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.posts,\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                newPost: action.payload.newPost,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default PostsReducer;\r\n","import {\r\n    FETCH_USER,\r\n    FETCH_USER_ALBUMS,\r\n    FETCH_USER_POSTS,\r\n    FETCH_USER_TODOS,\r\n} from \"../actions/UsersActions\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    userPosts: [],\r\n    userAlbums: [],\r\n    userTodos: [],\r\n};\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return {\r\n                ...state,\r\n                users: action.payload.users,\r\n            };\r\n        case FETCH_USER_POSTS:\r\n            return {\r\n                ...state,\r\n                userPosts: action.payload.userPosts,\r\n            };\r\n        case FETCH_USER_ALBUMS:\r\n            return {\r\n                ...state,\r\n                userAlbums: action.payload.userAlbums,\r\n            };\r\n        case FETCH_USER_TODOS:\r\n            return {\r\n                ...state,\r\n                userTodos: action.payload.userTodos,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default UsersReducer;\r\n","import { FETCH_TODO } from \"../actions/ToDoActions\";\r\n\r\nconst initialState = {\r\n    todo: [],\r\n};\r\n\r\nconst ToDoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_TODO:\r\n            return {\r\n                ...state,\r\n                todo: action.payload.todo,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ToDoReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport PostsReducer from \"./PostsReducer\";\r\nimport UsersReducer from \"./UsersReducer\";\r\nimport ToDoReducer from \"./ToDoReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst MainReducer = combineReducers({\r\n    posts: PostsReducer,\r\n    users: UsersReducer,\r\n    todo: ToDoReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport default MainReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport MainReducer from \"./reducers/MainReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    MainReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import \"./styles/index.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}